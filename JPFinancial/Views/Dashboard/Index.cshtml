@model JPFinancial.ViewModels.DashboardViewModel


@{
    ViewBag.Title = "Dashboard";
}

<h2>Dashboard</h2>
<div style="margin: 25px 15px" class="col-md-10">
    @using (Html.BeginForm("GetFutureValue", "Dashboard"))
    {
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Future Value</h4>
                <div class="row">
                    <label class="label label-info">FV by Amount:&nbsp;&nbsp;&nbsp;</label>
                    @Html.RadioButtonFor(model => Model.SelectedFVType, "futureValue", new { htmlAttributes = new { @class = "btn btn-default" } })
                    <label class="label label-info">FV by Date:&nbsp;&nbsp;&nbsp;</label>
                    @Html.RadioButtonFor(model => Model.SelectedFVType, "futureDate", new { htmlAttributes = new { @class = "btn btn-default" } })
                </div>
                <hr />
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.NetIncome, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NetIncome, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NetIncome, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FutureAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FutureAmount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FutureAmount, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FutureDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FutureDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FutureDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Calculate Future Value" class="btn btn-primary" />
                    </div>
                </div>
            </div>

            <div id="futureValueDiv" class="col-md-5 col-md-offset-1">
                @if (Model != null)
                {
                    if (Model.SelectedFVType == "futureValue")
                    {
                        <dl>
                            <dt>You will reach your savings goal of @Html.FormatValue(@Model.FutureAmount, "{0:C}") on @Html.FormatValue(Model.FutureDate, "{0:MMM dd, yyyy}")</dt>
                        </dl>
                    }
                    else
                    {
                        <dl>
                            <dt>You will have saved @Html.FormatValue(@Model.FutureAmount, "{0:C}") by @Html.FormatValue(Model.FutureDate, "{0:MMM dd, yyyy}")</dt>
                        </dl>
                    }
                }
            </div>
        }
    }
</div>

<div style="margin: 25px 15px" class="col-md-12">
    <h2 class="center-block" style="text-align: center">Expense & Income Summary for @Model.CurrentMonth</h2>
    <div class="col-md-4" style="text-align: center">
        <h3 style="text-decoration: underline">Bills Due</h3>
        <h4>@Model.MonthlyExpenses</h4>
    </div>
    <div class="col-md-4" style="text-align: center">
        <h3 style="text-decoration: underline">Budget Expenses</h3>
    </div>
    <div class="col-md-4" style="text-align: center">
        <h3 style="text-decoration: underline">Income</h3>
        <h4>@Model.MonthlyIncome</h4>
    </div>
</div>

<div style="margin: 25px 15px" class="col-md-10">
    <h2 class="center-block" style="text-align: center">With current spending and income, your savings should be</h2>
    <div class="col-md-3" id="oneMonthDiv" style="text-align: center">
        <h3 style="text-decoration: underline">1 Month</h3>
        <h4>@Model.OneMonthSavings</h4>
    </div>
    <div class="col-md-3" id="threeMonthDiv" style="text-align: center">
        <h3 style="text-decoration: underline">3 Months</h3>
        <h4>@Model.ThreeMonthsSavings</h4>
    </div>
    <div class="col-md-3" id="sixMonthDiv" style="text-align: center">
        <h3 style="text-decoration: underline">6 Months</h3>
        <h4>@Model.SixMonthsSavings</h4>
    </div>
    <div class="col-md-3" id="oneYearDiv" style="text-align: center">
        <h3 style="text-decoration: underline">1 Year</h3>
        <h4>@Model.OneYearSavings</h4>
    </div>

</div>

<div style="margin: 25px 15px" class="col-md-10">
    <h2 class="center-block" style="text-align: center">Financial Health</h2>
    <div class="col-md-3" id="oneMonthDiv" style="text-align: center">
        <h3 style="text-decoration: underline">Savings %</h3>
        <h4>@Model.SavingsPercentage</h4>
    </div>
    <div class="col-md-3" id="threeMonthDiv" style="text-align: center">
        <h3 style="text-decoration: underline">Total Monthly Income</h3>
        <h4>@Model.MonthlyIncome</h4>
    </div>
    <div class="col-md-3" id="sixMonthDiv" style="text-align: center">
        <h3 style="text-decoration: underline">Total Monthly Bills</h3>
        <h4>@Model.MonthlyExpenses</h4>
    </div>
    <div class="col-md-3" id="oneYearDiv" style="text-align: center">
        <h3 style="text-decoration: underline">Net Worth</h3>
        <h4>@Model.NetWorth</h4>
    </div>

</div>

<div>
    <table>
        <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.LoanViewModelByMonth[0])
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LoanViewModelByMonth[1])
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LoanViewModelByMonth[2])
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LoanViewModelByMonth[3])
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LoanViewModelByMonth[4])
            </th>
            <th>
                
            </th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.LoanViewModelByMonth)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Keys)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Values)
                </td>
                <td>            </td>
            </tr>
        }
        </tbody>
        <tfoot>

        </tfoot>
    </table>

</div>









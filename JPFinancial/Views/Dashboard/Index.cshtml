<head>
    <title>Dashbaord</title>

    <!-- CSS -->
    <link href="../../Content/paper-bootstrap.min.css" rel="stylesheet" />
    <link href="../../Content/paper-animate.min.css" rel="stylesheet" />
    <link href="../../Content/paper-dashboard.css" rel="stylesheet" />
    <link href="../../Content/custom.css" rel="stylesheet" />

    <!-- Fonts and icons -->
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.2.0/css/all.css" integrity="sha384-hWVjflwFxL6sNzntih27bfxkr27PmbbK/iSvJ+a4+0owXq79v+lsFkW54bOGbiDQ" crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/css?family=Muli:400,300" rel="stylesheet" type="text/css">
    <link href="../../Content/themify-icons.css" rel="stylesheet" />
</head>

@model JPFData.ViewModels.DashboardViewModel


@{
    ViewBag.Title = "Main";
}



<div class="wrapper">
    <div class="sidebar" data-background-color="black" data-active-color="danger">
        <div class="sidebar-wrapper">
            <div class="logo">
                <a href="#" class="simple-text">
                    J.P. Financial
                </a>
            </div>

            <ul class="nav">
                <li class="active">
                    <a href="index.cshtml">
                        <i class="ti-panel"></i>
                        <p>Dashboard</p>
                    </a>
                </li>
                <li>
                    <a href="../Accounts/Create.cshtml">
                        <i class="ti-user"></i>
                        <p>Add Account</p>
                    </a>
                </li>
            </ul>
        </div>
    </div>

    <div class="main-panel">
        <nav class="navbar navbar-default">
            <div class="container-fluid">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="icon-bar bar1"></span>
                        <span class="icon-bar bar2"></span>
                        <span class="icon-bar bar3"></span>
                    </button>
                    <a class="navbar-brand" href="#">Dashboard</a>
                </div>
                <div class="collapse navbar-collapse">
                    <ul class="nav navbar-nav navbar-right">
                        <li>@Html.ActionLink("Dashboard", "Index", "Dashboard")</li>
                        <li>@Html.ActionLink("Income", "Index", "Salary")</li>
                        <li>@Html.ActionLink("Accounts", "Index", "Accounts")</li>
                        <li>@Html.ActionLink("Bills", "Index", "Bill")</li>
                        <li>@Html.ActionLink("Transactions", "Index", "Transactions")</li>
                        <li>@Html.ActionLink("Loans", "Index", "Loans")</li>
                    </ul>
                </div>
            </div>
        </nav>

        <div class="content">
            <div class="container-fluid">
                <div class="row">
                    <div class="row" style="margin: 0 0 12px 16px"><p style="font-size: large; font-weight: bold">@DateTime.Today.ToString("MMMM yyyy")</p></div>
                    <div class="col-lg-3 col-sm-6">
                        <div class="card">
                            <div class="content">
                                <div class="row">
                                    <div class="col-xs-5">
                                        <div class="icon-big icon-warning text-center">
                                            <i class="ti-server"></i>
                                        </div>
                                    </div>
                                    <div class="col-xs-7">
                                        <div class="numbers">
                                            <p>Avg. Spending</p>
                                            @Html.DisplayFor(model => model.Entity.StaticFinancialMetrics.AverageMonthlyExpenses3MMA)
                                        </div>
                                    </div>
                                </div>
                                <div class="footer">
                                    <hr />
                                    <div class="stats">
                                        <i class="ti-reload"></i> @Html.DisplayFor(model => model.Entity.StaticFinancialMetrics.PercentageChangeExpenses)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-3 col-sm-6">
                        <div class="card">
                            <div class="content">
                                <div class="row">
                                    <div class="col-xs-5">
                                        <div class="icon-big icon-success text-center">
                                            <i class="ti-wallet"></i>
                                        </div>
                                    </div>
                                    <div class="col-xs-7">
                                        <div class="numbers">
                                            <p>Mandatory $</p>
                                            @Html.DisplayFor(model => model.Entity.StaticFinancialMetrics.MandatoryExpenses)
                                        </div>
                                    </div>
                                </div>
                                <div class="footer">
                                    <hr />
                                    <div class="stats">
                                        <i class="ti-calendar"></i> Last month - @Html.DisplayFor(model => model.Entity.StaticFinancialMetrics.LastMonthMandatoryExpenses)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-3 col-sm-6">
                        <div class="card">
                            <div class="content">
                                <div class="row">
                                    <div class="col-xs-5">
                                        <div class="icon-big icon-danger text-center">
                                            <i class="ti-pulse"></i>
                                        </div>
                                    </div>
                                    <div class="col-xs-7">
                                        <div class="numbers">
                                            <p style="width: 100%">Discretionary $</p>
                                            @Html.DisplayFor(model => model.Entity.StaticFinancialMetrics.DiscretionarySpending)
                                        </div>
                                    </div>
                                </div>
                                <div class="footer">
                                    <hr />
                                    <div class="stats">
                                        <i class="ti-calendar"></i> Last month - @Html.DisplayFor(model => model.Entity.StaticFinancialMetrics.LastMonthDiscretionarySpending)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-3 col-sm-6">
                        <div class="card">
                            <div class="content">
                                <div class="row">
                                    <div class="col-xs-5">
                                        <div class="icon-big icon-info text-center">
                                            <i class="ti-server"></i>
                                        </div>
                                    </div>
                                    <div class="col-xs-7">
                                        <div class="numbers">
                                            <p>Savings Rate</p>
                                            @Html.DisplayFor(model => model.Entity.StaticFinancialMetrics.SavingsRate)
                                        </div>
                                    </div>
                                </div>
                                <div class="footer">
                                    <hr />
                                    <div class="stats">
                                        <i class="ti-reload"></i> Update now
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="card">
                            <div class="header">
                                <h4 class="title">Income/Expense</h4>
                                <p class="category">Monthly</p>
                            </div>
                            <div class="content">
                                <div id="chartHours" class="ct-chart"></div>
                                <div class="footer">
                                    <div class="chart-legend">
                                        <i class="fa fa-circle text-success"></i> Net Income
                                        <i class="fa fa-circle text-info"></i> Income
                                        <i class="fa fa-circle text-danger"></i> Expenses
                                    </div>
                                    <hr />
                                    <div class="stats">
                                        <i class="ti-reload"></i> Updated 3 minutes ago
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="card">
                            <div class="header">
                                <h4 class="title">Transactions</h4>
                            </div>
                            <div class="content">
                                @using (Html.BeginForm())
                                {
    <!-- BEGIN HIDDEN FIELDS AREA -->
                                    @Html.HiddenFor(m => m.EventCommand)
                                    @Html.HiddenFor(m => m.Mode)
                                    @Html.HiddenFor(m => m.EventArgument)
    <!-- END HIDDEN FIELDS AREA -->


    <!-- BEGIN CREATE TRANSACTION AREA-->
                                    if (Model.IsCreateAreaVisible)
                                    {
                                        <div class="panel panel-primary">
                                            <div class="panel-heading">
                                                <h1 class="panel-title">Add Transaction</h1>
                                            </div>
                                            <div class="panel-body">
                                                <div class="form-horizontal">
                                                    <div class="form-group col-xs-4 col-md-4">
                                                        @Html.LabelFor(model => model.Entity.CreateTransaction.Date, new { @class = "control-label" })
                                                        @Html.EditorFor(model => model.Entity.CreateTransaction.Date, new { htmlAttributes = new { @class = "form-control" } })
                                                    </div>

                                                    <div class="form-group col-xs-4 col-md-4">
                                                        @Html.LabelFor(model => model.Entity.CreateTransaction.Payee, new { @class = "control-label" })
                                                        @Html.EditorFor(model => model.Entity.CreateTransaction.Payee, new { htmlAttributes = new { @class = "form-control" } })
                                                    </div>

                                                    <div class="form-group col-xs-4 col-md-4">
                                                        @Html.LabelFor(model => model.Entity.CreateTransaction.Memo, new { @class = "control-label" })
                                                        @Html.EditorFor(model => model.Entity.CreateTransaction.Memo, new { htmlAttributes = new { @class = "form-control" } })
                                                    </div>

                                                    <div class="form-group col-xs-3  col-md-3">
                                                        @Html.LabelFor(model => model.Entity.CreateTransaction.Type, new { @class = "control-label" })
                                                        @Html.EnumDropDownListFor(model => model.Entity.CreateTransaction.Type, new { @class = "form-control" })
                                                    </div>

                                                    <div class="form-group col-xs-3 col-md-3" style="margin-left: 8px">
                                                        @Html.LabelFor(model => model.Entity.CreateTransaction.Category, new { @class = "control-label" })
                                                        @Html.EnumDropDownListFor(model => model.Entity.CreateTransaction.Category, new { @class = "form-control" })
                                                    </div>

                                                    <div class="form-group col-xs-3 col-md-3" style="margin-left: 8px">
                                                        @Html.LabelFor(model => model.Entity.CreateTransaction.SelectedCreditAccount, new { @class = "control-label" })
                                                        @Html.DropDownListFor(model => model.Entity.CreateTransaction.SelectedCreditAccount, new SelectList(Model.Entity.Transaction.Accounts, "Id", "Name"), " ", new { @class = "form-control" })
                                                    </div>

                                                    <div class="form-group col-xs-3 col-md-3" style="margin-left: 8px">
                                                        @Html.LabelFor(model => model.Entity.CreateTransaction.SelectedDebitAccount, new { @class = "control-label" })
                                                        @Html.DropDownListFor(model => model.Entity.CreateTransaction.SelectedDebitAccount, new SelectList(Model.Entity.Transaction.Accounts, "Id", "Name"), " ", new { @class = "form-control" })
                                                    </div>

                                                    <div class="form-group col-xs-3 col-md-3">
                                                        @Html.LabelFor(model => model.Entity.CreateTransaction.Amount, new { @class = "control-label" })
                                                        @Html.EditorFor(model => model.Entity.CreateTransaction.Amount, new { htmlAttributes = new { @class = "form-control" } })
                                                    </div>

                                                    <div class="form-group col-xs-2 col-md-2" style="margin: 24px 0 0 0; padding-left: 55px">
                                                        @Html.LabelFor(model => model.Entity.CreateTransaction.UsedCreditCard, new { @class = "control-label" })
                                                        @Html.CheckBoxFor(model => model.Entity.CreateTransaction.UsedCreditCard, new { htmlAttributes = new { @class = "form-control" } })
                                                    </div>

                                                    <div class="form-group col-xs-3 col-md-3">
                                                        @Html.LabelFor(model => model.Entity.CreateTransaction.SelectedCreditCardAccount, new { @class = "control-label" })
                                                        @Html.DropDownListFor(model => model.Entity.CreateTransaction.SelectedCreditCardAccount, new SelectList(Model.Entity.Transaction.CreditCards, "Id", "Name"), " ", new { @class = "form-control" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="panel-footer">
                                                <button id="btnAdd" class="btn btn-sm btn-success"
                                                        data-pdsa-action="add">
                                                    <i class="glyphicon glyphicon-plus"></i>&nbsp;Add
                                                </button>

                                            </div>
                                        </div>
                                    }
    <!-- END CREATE TRANSACTION AREA-->


    <!-- BEGIN EDIT TRANSACTION AREA -->
                                    if (Model.IsDetailAreaVisible)
                                    {
                                        <div class="panel panel-primary">
                                            <div class="panel-heading">
                                                <h1 class="panel-title">Edit Transaction</h1>
                                            </div>
                                            <div class="panel-body">
                                                <!-- BEGIN MESSAGE AREA -->
                                                <div class="row">
                                                    <div class="col-xs-12">
                                                        @if (!Model.IsValid)
                                                        {
                                                        <div class="alert alert-danger alert-dismissable" role="alert">
                                                            <button type="button" class="close" data-dismiss="alert">
                                                                <span aria-hidden="true">&times;</span>
                                                                <span class="sr-only">Close</span>
                                                            </button>
                                                            @Html.ValidationSummary(false)
                                                        </div>
                                                        }
                                                    </div>
                                                </div>
                                                <!-- END MESSAGE AREA -->
                                                <div class="form-horizontal">
                                                    <div class="form-group col-xs-4 col-md-4">
                                                        @Html.LabelFor(model => model.Entity.CreateTransaction.Date, new { @class = "control-label" })
                                                        @Html.EditorFor(model => model.Entity.CreateTransaction.Date, new { htmlAttributes = new { @class = "form-control" } })
                                                    </div>

                                                    <div class="form-group col-xs-4 col-md-4">
                                                        @Html.LabelFor(model => model.Entity.CreateTransaction.Payee, new { @class = "control-label" })
                                                        @Html.EditorFor(model => model.Entity.CreateTransaction.Payee, new { htmlAttributes = new { @class = "form-control" } })
                                                    </div>

                                                    <div class="form-group col-xs-4 col-md-4">
                                                        @Html.LabelFor(model => model.Entity.CreateTransaction.Memo, new { @class = "control-label" })
                                                        @Html.EditorFor(model => model.Entity.CreateTransaction.Memo, new { htmlAttributes = new { @class = "form-control" } })
                                                    </div>

                                                    <div class="form-group col-xs-3  col-md-3">
                                                        @Html.LabelFor(model => model.Entity.CreateTransaction.Type, new { @class = "control-label" })
                                                        @Html.EnumDropDownListFor(model => model.Entity.CreateTransaction.Type, new { @class = "form-control" })
                                                    </div>

                                                    <div class="form-group col-xs-3 col-md-3" style="margin-left: 8px">
                                                        @Html.LabelFor(model => model.Entity.CreateTransaction.Category, new { @class = "control-label" })
                                                        @Html.EnumDropDownListFor(model => model.Entity.CreateTransaction.Category, new { @class = "form-control" })
                                                    </div>

                                                    <div class="form-group col-xs-3 col-md-3" style="margin-left: 8px">
                                                        @Html.LabelFor(model => model.Entity.CreateTransaction.SelectedCreditAccount, new { @class = "control-label" })
                                                        @Html.DropDownListFor(model => model.Entity.CreateTransaction.SelectedCreditAccount, new SelectList(Model.Entity.Transaction.Accounts, "Id", "Name"), " ", new { @class = "form-control" })
                                                    </div>

                                                    <div class="form-group col-xs-3 col-md-3" style="margin-left: 8px">
                                                        @Html.LabelFor(model => model.Entity.CreateTransaction.SelectedDebitAccount, new { @class = "control-label" })
                                                        @Html.DropDownListFor(model => model.Entity.CreateTransaction.SelectedDebitAccount, new SelectList(Model.Entity.Transaction.Accounts, "Id", "Name"), " ", new { @class = "form-control" })
                                                    </div>

                                                    <div class="form-group col-xs-3 col-md-3">
                                                        @Html.LabelFor(model => model.Entity.CreateTransaction.Amount, new { @class = "control-label" })
                                                        @Html.EditorFor(model => model.Entity.CreateTransaction.Amount, new { htmlAttributes = new { @class = "form-control" } })
                                                    </div>

                                                    <div class="form-group col-xs-2 col-md-2" style="margin: 24px 0 0 0; padding-left: 55px">
                                                        @Html.LabelFor(model => model.Entity.CreateTransaction.UsedCreditCard, new { @class = "control-label" })
                                                        @Html.CheckBoxFor(model => model.Entity.CreateTransaction.UsedCreditCard, new { htmlAttributes = new { @class = "form-control" } })
                                                    </div>

                                                    <div class="form-group col-xs-3 col-md-3">
                                                        @Html.LabelFor(model => model.Entity.CreateTransaction.SelectedCreditCardAccount, new { @class = "control-label" })
                                                        @Html.DropDownListFor(model => model.Entity.CreateTransaction.SelectedCreditCardAccount, new SelectList(Model.Entity.Transaction.CreditCards, "Id", "Name"), " ", new { @class = "form-control" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="panel-footer">
                                                <button id="btnSave" class="btn btn-sm btn-success" data-pdsa-action="save" data-pdsa-val="@Model.Entity.CreateTransaction.Id">
                                                    <i class="glyphicon glyphicon-floppy-disk"></i>&nbsp;Save
                                                </button>
                                            </div>
                                        </div>
                                    }
        <!-- END EDIT TRANSACTION AREA -->

        <!-- BEGIN TRANSACTION LIST AREA-->
                                    if (Model.IsListAreaVisible)
                                    {
                                            <table class="table">
                                                <thead>
                                                    <tr>
                                                        <th></th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.Entity.Transaction.Date)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.Entity.Transaction.Payee)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.Entity.Transaction.Memo)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.Entity.Transaction.Type)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.Entity.Transaction.Category)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.Entity.Transaction.Amount)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.Entity.Transaction.UsedCreditCard)
                                                        </th>
                                                        <th></th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var item in Model.Entity.Transactions)
                                                    {
                                                        <tr>
                                                            <td class="pdsa-action-button-column">
                                                                <a href="#" data-pdsa-action="edit"
                                                                   data-pdsa-val="@item.Id"
                                                                   class="btn btn-default btn-sm">
                                                                    <i class="glyphicon glyphicon-edit"></i>
                                                                </a>
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.Date)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.Payee)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.Memo)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.Type)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.Category)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.Amount)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.UsedCreditCard)
                                                            </td>
                                                            <td class="pdsa-action-button-column">
                                                                <a href="#" data-pdsa-action="delete"
                                                                   data-pdsa-val="@item.Id"
                                                                   onclick="return confirm('Delete this Product?');"
                                                                   class="btn btn-default btn-sm">
                                                                    <i class="glyphicon glyphicon-trash"></i>
                                                                </a>
                                                            </td>
                                                        </tr>
                                                    }
                                                </tbody>
                                                <tfoot>
                                                    <tr>
                                                        <td colspan="2">Total Cost: $12,334.52</td>
                                                        <td colspan="2">Average Cost: $18.21</td>
                                                        <td colspan="2">Largest Transaction: $1382.76</td>
                                                        <td colspan="2">Smallest Transaction: $0.21</td>
                                                    </tr>
                                                </tfoot>
                                            </table>
                                    }
        <!-- END TRANSACTION LIST AREA-->
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



@section scripts {
    <!--   Core JS Files   -->
    <script src="../../Scripts/jquery-1.10.2.js" type="text/javascript"></script>
    <script src="../../Scripts/bootstrap-paper.min.js" type="text/javascript"></script>

    <!--  Charts Plugin -->
    <script src="../../Scripts/chartist.min.js"></script>

    <script src="../../Scripts/dashboard-chart.js"></script>



    <script>
        $(document).ready(function() {

            $("[data-pdsa-action]").on("click",
                function(e) {
                    e.preventDefault();

                    $("#EventCommand").val(
                        $(this).data("pdsa-action"));

                    $("#EventArgument").val(
                        $(this).attr("data-pdsa-val"));

                    $("form").submit();
                });
            var model = @Html.Raw(Json.Encode(Model.Entity.StaticFinancialMetrics));
            chart.initChartist(model);
        });
    </script>
}





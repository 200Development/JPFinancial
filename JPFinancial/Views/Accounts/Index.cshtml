@model JPFData.ViewModels.AccountViewModel

@{
    ViewBag.Title = "Accounts";
}

@using (Html.BeginForm(FormMethod.Post))
{
    <div class="content">
        <div class="container-fluid">
        <div class="row">
        <div class="row" style="margin: 12px 0 12px 16px">
            <p style="font-size: large; font-weight: bold">@DateTime.Today.ToString("MMMM yyyy")</p>
        </div>
        <div class="col-lg-4 col-sm-6">
            <div class="card">
                <div class="content">
                    <div class="row">
                        <div class="col-xs-5">
                            <div class="icon-big icon-success text-center">
                                @if (Model.Metrics.CashBalance > 0)
                                {
                                    <i class="ti-face-smile icon-success"></i>
                                }
                                @if (Model.Metrics.CashBalance == 0)
                                {
                                    <i class="ti-face-smile icon-warning"></i>
                                }
                                @if (Model.Metrics.CashBalance < 0)
                                {
                                    <i class="ti-face-sad icon-danger"></i>
                                }
                            </div>
                        </div>
                        <div class="col-xs-7">
                            <div class="numbers">
                                <p>@Html.LabelFor(model => model.Metrics.CashBalance)</p>
                                @Html.DisplayFor(model => model.Metrics.CashBalance)
                            </div>
                        </div>
                    </div>
                    <div class="footer">
                        <hr />
                        <div class="stats">
                            <span style="margin-right: 8px">@Html.LabelFor(model => model.Metrics.SpendableCash):</span>
                            @Html.DisplayFor(model => model.Metrics.SpendableCash)
                        </div>
                    </div>
                </div>
            </div>
        </div>

        @if (Model.Metrics.AccountingBalance >= 0)
        {
            <div class="col-lg-4 col-sm-6">
                <div class="card">
                    <div class="content">
                        <div class="row">
                            <div class="col-xs-5">
                                <div class="icon-big icon-success text-center">
                                    <i class="ti-thumb-up"></i>
                                </div>
                            </div>
                            <div class="col-xs-7">
                                <div class="numbers">
                                    <p>@Html.LabelFor(model => model.Metrics.AccountingBalance)</p>
                                    @Html.DisplayFor(model => model.Metrics.AccountingBalance)
                                </div>
                            </div>
                        </div>
                        <div class="footer">
                            <hr />
                            <div class="stats">
                                <span style="margin-right: 12px">@Html.LabelFor(model => model.Metrics.PoolBalance):</span>
                                @Html.DisplayFor(model => model.Metrics.PoolBalance)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        
        @if (Model.Metrics.AccountingBalance < 0)
        {
            <div class="col-lg-4 col-sm-6">
                <div class="card">
                    <div class="content">
                        <div class="row">
                            <div class="col-xs-5">
                                <div class="icon-big icon-danger text-center">
                                    <i class="ti-thumb-down"></i>
                                </div>
                            </div>
                            <div class="col-xs-7">
                                <div class="numbers">
                                    <p>@Html.LabelFor(model => model.Metrics.AccountingBalance)</p>
                                    @Html.DisplayFor(model => model.Metrics.AccountingBalance)
                                </div>
                            </div>
                        </div>
                        <div class="footer">
                            <hr />
                            <div class="stats">
                                <span style="margin-right: 12px">@Html.LabelFor(model => model.Metrics.PoolBalance):</span>
                                @Html.DisplayFor(model => model.Metrics.PoolBalance)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }

        @if (Model.Metrics.OutstandingExpenses > 0)
        {
            <div class="col-lg-4 col-sm-6">
                <div class="card">
                    <div class="content">
                        <div class="row">
                            <div class="col-xs-5">
                                <div class="icon-big icon-danger text-center">
                                    <i class="ti-receipt"></i>
                                </div>
                            </div>
                            <div class="col-xs-7">
                                <div class="numbers">
                                    <p style="width: 100%">@Html.LabelFor(model => model.Metrics.OutstandingExpenses)</p>
                                    @Html.DisplayFor(model => model.Metrics.OutstandingExpenses)
                                </div>
                            </div>
                        </div>
                        <div class="footer">
                            <hr />
                            <div class="stats">
                                <span style="margin-right: 12px">@Html.LabelFor(model => model.Metrics.OutstandingAccountDeficit):</span>
                                @Html.DisplayFor(model => model.Metrics.OutstandingAccountDeficit)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        @if (Model.Metrics.OutstandingExpenses <= 0)
        {
            <div class="col-lg-4 col-sm-6">
                <div class="card">
                    <div class="content">
                        <div class="row">
                            <div class="col-xs-5">
                                <div class="icon-big icon-success text-center">
                                    <i class="ti-receipt"></i>
                                </div>
                            </div>
                            <div class="col-xs-7">
                                <div class="numbers">
                                    <p style="width: 100%">@Html.LabelFor(model => model.Metrics.OutstandingExpenses)</p>
                                    @Html.DisplayFor(model => model.Metrics.OutstandingExpenses)
                                </div>
                            </div>
                        </div>
                        <div class="footer">
                            <hr />
                            <div class="stats">
                                <span style="margin-right: 12px">@Html.LabelFor(model => model.Metrics.OutstandingAccountDeficit):</span>
                                @Html.DisplayFor(model => model.Metrics.OutstandingAccountDeficit)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }

        </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="header">
                            <h4 class="title">Balances</h4>
                        </div>
                        <div class="content">
                            <div id="chartAccounts" class="ct-chart"></div>
                            <div class="footer">
                                <hr />
                                <div class="stats">
                                  @*  <i class="ti-reload"></i> Updated 3 minutes ago*@
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="header" style="margin: 8px 0">
                            <h4 class="title">Accounts</h4>
                            <button class="btn btn-sm">
                                @Html.ActionLink("Add Account", "Create")
                            </button>
                            @*<button class="btn btn-sm">
                                @Html.ActionLink("Update", "Update")
                            </button>*@
                            <button class="btn btn-sm">
                                @Html.ActionLink("Rebalance", "Rebalance")
                            </button>
                        </div>
                        <div class="container-fluid" style="text-align: center">
                            @foreach (var item in Model.Accounts.OrderByDescending(a => a.Balance).ThenBy(b => b.Name))
                            {
                            <div class="card col-lg-3" style="margin: 8px 0; border: slategray solid 1px">
                                <div class="card-header">
                                    <div style="font-weight: bold; font-size: 1.5em">@item.Name</div>
                                    <div>
                                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                                    </div>
                                </div>
                                <div class="card-body" style="margin: 12px 0; text-align: center">
                                    <div class="card-price"><span style="font-weight: bold">Balance:</span>&nbsp;$@item.Balance</div>
                                    @if (@item.BalanceSurplus > 0)
                                        {
                                        <div class="card-price"><span style="font-weight: bold; color: rgb(13, 115, 13)">Surplus:</span>&nbsp;$@item.BalanceSurplus</div>
                                        }
                                    @if (@item.BalanceSurplus < 0)
                                        {
                                        <div class="card-price"><span style="font-weight: bold; color: rgb(186, 18, 18)">Deficit:</span>&nbsp;$@item.BalanceSurplus</div>
                                        }
                                    @if (@item.BalanceSurplus == 0)
                                        {
                                        <div class="card-price"><span style="font-weight: bold">Balanced</span></div>
                                        }
                                </div>
                                <div class="card-footer">
                                    <div class="card-text">
                                        <div style="float: left; font-size: .9em">
                                            <span style="font-weight: bold">Required:</span>&nbsp;$@item.RequiredSavings
                                        </div>
                                        <div style="float: right; font-size: .9em">
                                            <span style="font-weight: bold">Limit:</span>&nbsp;$@item.BalanceLimit
                                        </div>
                                    </div>
                                </div>
                            </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section scripts {
    <!--   Core JS Files   -->
    <script src="../../Scripts/jquery-1.10.2.js" type="text/javascript"></script>
    <script src="../../Scripts/bootstrap-paper.min.js" type="text/javascript"></script>

    <!--  Charts Plugin -->
    <script src="../../Scripts/chartist.min.js"></script>
    <script type="text/javascript" src="https://www.google.com/jsapi"></script> ;
    <script>
        google.load("visualization",
            "1",
            {
                packages: ["corechart"]
            });

        $(document).ready(function() { chart(); });

        function chart() {
            var accounts = @Html.Raw(Json.Encode(@Model.Accounts.OrderByDescending(a => a.Balance).Take(8)));
            var dataTable = new google.visualization.DataTable();
            var accountsLength = Object.keys(accounts).length;
            var accountsArray = new Array(accountsLength);

            //Add each Account from Model to an array to iterate through
            for (prop in accounts) {
                accountsArray.push(accounts[prop]);
            }

            //Remove any undefined Accounts
            accountsArray = accountsArray.filter(function(n) { return n != undefined });

            //Set the graph X (Account) and Y (CurrentBalance) values
            var data = [['Account', 'Current Balance']];

            //Iterate through Accounts array to add each account to the graph.
            for (var i = 0; i < accountsArray.length; i++) {
                if (accountsArray[i]['Balance'] === 0) continue; //Exclude any Accounts with a balance of $0.00
                data.push([accountsArray[i]['Name'], accountsArray[i]['Balance']]);
            };

            var numRows = data.length;
            var numCols = data[0].length;

            dataTable.addColumn('string', data[0][0]);

            for (var i = 1; i < numCols; i++)
                dataTable.addColumn('number', data[0][1]);

            for (var i = 1; i < numRows; i++)
                dataTable.addRow(data[i]);

            var options = {
                width: "auto",
                pointSize: 8,
                lineWidth: 2,
                height: "225",
                backgroundColor: "transparent",
                colors: ["#7AC29A"],
                tooltip: {
                    textStyle: {
                        color: "#666666",
                        fontSize: 12
                    },
                    showColorCode: false
                },
                legend: {
                    textStyle: {
                        color: "black",
                        fontSize: 12
                    }
                },
                chartArea: {
                    left: 50,
                    top: 25,
                    height: "85%"
                },

                vAxis: {
                    gridlines: {
                        color: "transparent"
                    }
                }
            };

            var chart = new google.visualization.ColumnChart(document.getElementById("chartAccounts"));
            chart.draw(dataTable, options);
        }

    </script>
}

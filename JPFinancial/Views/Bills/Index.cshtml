
@{
    ViewBag.Title = "Bills";
}


@Styles.Render("~/Content/bills.css")


@using (Html.BeginForm("Create", "Bills", FormMethod.Post))
{

    @Html.AntiForgeryToken();

    <div class="content">
        <div id="expensesTablePartial">
            @Html.Action("ExpensesTablePartial")
        </div>

        <div id="billsTablePartial">
            @Html.Action("BillsTablePartial")
        </div>
    </div>
}


@section scripts
{
    <script type="text/javascript">

        let expenseTransaction = {};


        function rowSelected(e) {
            const id = e.target.id.split('_')[1];

            $('#selectedBillId').val(id);

            const name = $(`#billName_${id}`).length ? $(`#billName_${id}`).text() : '';

            const amountDueText = $(`#billAmountDue_${id}`).text().replace('$', '');
            const amountDue = Number(amountDueText) !== NaN ? Number(amountDueText) : 0;

            const dueDateText = $(`#billDueDate_${id}`).length ? $(`#billDueDate_${id}`).text() : '';
            const dueDateFields = dueDateText.split('/');

            const year = dueDateFields[2];
            const month = ('0' + dueDateFields[0]).slice(-2);
            const day = ('0' + dueDateFields[1]).slice(-2);
            const dueDate = `${year}-${month}-${day}`;

            const frequencyId = Number($('#billFrequencyId_' + id).text()) !== NaN
                ? Number($('#billFrequencyId_' + id).text())
                : -1;
            const accountId = Number($('#billAccountId_' + id).text()) !== NaN
                ? Number($('#billAccountId_' + id).text())
                : -1;


            $('#selectedBillEmptyText').css('display', 'none');
            $('.selectedInput').css('display', 'flex');
            $('.selectedInputLabel').css('display', 'block');
            $('#selectedFooter').css('display', 'block');
            $('#selectedBillName').val(name);
            $('#selectedBillAmountDue').val(amountDue);
            $('#selectedBillDueDate').val(dueDate);
            $('#Bill_PaymentFrequency').val(frequencyId);
            $('#Bill_AccountId').val(accountId);
        };

        function saveChanges(e) {

            e.preventDefault();
            e.stopPropagation();

            const data = {};
            data.Id = $('#selectedBillId').val() != undefined ? $('#selectedBillId').val() : null;
            data.Name = $('#selectedBillName').val() != undefined ? $('#selectedBillName').val() : null;
            data.AmountDue = $('#selectedBillAmountDue').val() != undefined ? $('#selectedBillAmountDue').val() : null;
            data.DueDate = $('#selectedBillDueDate').val() != undefined ? $('#selectedBillDueDate').val() : null;
            data.PaymentFrequency =
                $('#Bill_PaymentFrequency').val() != undefined ? $('#Bill_PaymentFrequency').val() : null;
            data.AccountId = $('#Bill_AccountId').val() != undefined ? $('#Bill_AccountId').val() : null;

            $.ajax({
                type: 'POST',
                url: 'Bills/EditBill',
                dataType: 'json',
                data: data,
                success: function () {
                    window.location.reload();
                },
                failure: function (result) {
                    console.log('Failure: ' + result);
                },
                error: function (error) {
                    console.log('Error: ' + error);
                }
            });
        };

        function deleteConfirmation(e) {

            e.preventDefault();
            e.stopPropagation();

            $('#footerOptions').css('display', 'none');
            $('#deleteConfirmationDiv').css('display', 'block');

            //Unbind click event listener before adding to prevent stacking handler
            $('#yesDeleteButton').unbind('click');
            $('#noDeleteButton').unbind('click');

            $('#yesDeleteButton').click(deleteConfirmed);
            $('#noDeleteButton').click(deleteCancelled);
        };

        function deleteConfirmed(e) {

            e.preventDefault();
            e.stopPropagation();

            const data = {};
            data.Id = $('#selectedBillId').val() != undefined ? $('#selectedBillId').val() : null;

            $.ajax({
                type: 'POST',
                url: 'Bills/DeleteBill',
                dataType: 'json',
                data: data,
                success: function (result) {
                    window.location.reload();
                },
                failure: function (result) {
                    console.log('Failure: ' + result);
                },
                error: function (error) {
                    console.log('Error: ' + error);
                }
            });
        };

        function deleteCancelled(e) {

            e.preventDefault();
            e.stopPropagation();

            $('#footerOptions').css('display', 'block');
            $('#deleteConfirmationDiv').css('display', 'none');
        };

        function payBill(e) {

            e.preventDefault();
            e.stopPropagation();

            const id = e.target.id.split('_')[1];

            const confirmStr = 'Add Transaction?';

            let confirmHtml = `<div class="card col-md-5 mx-auto border-dark text-center" id="confirmTransactionDiv">`;
            confirmHtml += `<div class="card-title">`;
            confirmHtml += `<div class="justify-content-center">` + confirmStr + `</div>`;
            confirmHtml += `</div><div>`;
            confirmHtml += `<button id="withTransactionButton_` + id + `" class="btn btn-dark">Yes</button>`;
            confirmHtml += `<button id="withoutTransactionButton_` + id + `" class="btn btn-dark">No</button>`;
            confirmHtml += `</div></div></div>`;

            $('#payExpenseDiv').append(confirmHtml);
            $('#withTransactionButton_' + id).click({ id: id }, setPaidWithTransaction);
            $('#withoutTransactionButton_' + id).click({ id: id }, setPaidWithoutTransaction);
        };

        function setPaidWithTransaction(e) {

            e.preventDefault();
            e.stopPropagation();

            const id = e.data.id;
            expenseTransaction = {};
            expenseTransaction = buildExpenseModel(id);

            $('#confirmTransactionDiv').empty();

            let editTransaction = `<div class="card-body"><div>Amount</div>`;
            editTransaction += `<div class="input-group justify-content-center">`;
            editTransaction += `<div class="input-group-prepend"><span class="input-group-text">$</span></div>`;
            editTransaction += `<input class="input-group" id="expenseTransactionAmount" type="number" value="` + expenseTransaction.Amount + `"/></div>`;
            editTransaction += `<div>Paid On</div><div class="input-group justify-content-center">`;
            editTransaction += `<input class="input-group" id="expenseTransactionDate" type="date" value="` + expenseTransaction.Due + `" /></div>`;
            editTransaction += `<div><button class="btn btn-dark" id="createTransactionButton">Create Transaction</button>`;
            editTransaction += `<button class="btn btn-dark" id="cancelTransactionButton">Cancel</button></div>`;

            $('#confirmTransactionDiv').append(editTransaction);

            $('#createTransactionButton').click(createTransaction);
            $('#cancelTransactionButton').click(cancelTransaction);
        };

        function createTransaction(e) {

            e.preventDefault();
            e.stopPropagation();

            const amountText = $('#expenseTransactionAmount').val().replace('$', '');
            expenseTransaction.Amount = Number(amountText) !== NaN ? Number(amountText) : expenseTransaction.Amount;
            expenseTransaction.Due = $('#expenseTransactionDate') !== undefined ? $('#expenseTransactionDate').val() : expenseTransaction.Due;

            $.ajax({
                url: 'Bills/SetExpenseToPaidWithTransaction',
                type: 'POST',
                dataType: 'json',
                data: expenseTransaction,
                success: function () {
                    window.location.reload();
                },
                failure: function (result) {
                    console.log('Failure: ' + result);
                },
                error: function (error) {
                    console.log('Error: ' + error);
                }
            });
        };

        function cancelTransaction(e) {

            e.preventDefault();
            e.stopPropagation();

            $('#confirmTransactionDiv').remove();
        }

        function setPaidWithoutTransaction(e) {

            e.preventDefault();
            e.stopPropagation();

            const id = e.data.id;
            const data = buildExpenseModel(id);

            $.ajax({
                url: 'Bills/SetExpenseToPaid',
                type: 'POST',
                dataType: 'json',
                data: data,
                success: function () {
                    window.location.reload();
                },
                failure: function (result) {
                    console.log('Failure: ' + result);
                },
                error: function (error) {
                    console.log('Error: ' + error);
                }
            });
        };

        function buildExpenseModel(id) {

            const name = $('#expenseName_' + id).length ? $('#expenseName_' + id).text() : '';

            const amountText = $('#expenseAmountDue_' + id).text().replace('$', '');
            const amount = Number(amountText) !== NaN ? Number(amountText) : 0;

            const dueDateText = $('#expenseDueDate_' + id).length ? $('#expenseDueDate_' + id).text() : '';
            const dateFields = dueDateText.split('/');
            const year = dateFields[2];
            const month = ('0' + dateFields[0]).slice(-2);
            const day = ('0' + dateFields[1]).slice(-2);
            const date = year + '-' + month + '-' + day;

            const creditAccountIdElement = $('#expenseCreditAccountId_' + id)[0];
            const creditAccountId = Number(creditAccountIdElement.value) !== NaN ? Number(creditAccountIdElement.value) : 0;

            const transaction = {};
            transaction.Id = id;
            transaction.Name = name;
            transaction.Due = date;
            transaction.Amount = amount;
            transaction.CreditAccountId = creditAccountId;


            return transaction;
        }

        function setHiddenForAccount(e) {

            e.preventDefault();
            e.stopPropagation();

            const selected = $('#Bill.AccountId').prevObject[0];
            const activeElement = selected.activeElement;
            const value = activeElement.value;

            $('#selectedAccountId').val(value);
        };

        function setHiddenForFrequency(e) {

            e.preventDefault();
            e.stopPropagation();

            const selected = $('#Bill.PaymentFrequency').prevObject[0];
            const activeElement = selected.activeElement;
            const value = activeElement.value;

            $('#selectedFrequencyId').val(value);
        };

        function addTableListeners() {

            $('.tableRow').click(rowSelected);
            $('.payBillButtons').click(payBill);
            $('#editButton').click(saveChanges);
            $('#deleteButton').click(deleteConfirmation);

        };


        document.addEventListener("DOMContentLoaded", addTableListeners);

    </script>
}






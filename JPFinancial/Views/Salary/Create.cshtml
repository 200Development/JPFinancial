@model JPFinancial.ViewModels.CreateSalaryViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Salary</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Payee, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Payee, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Payee, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PayType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.PayType, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PayType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PayFrequency, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.PayFrequency, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PayFrequency, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GrossPay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GrossPay, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GrossPay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group BenefitsDivId">
            <button class="btn btn-default addBenefitBtn" style="width: 150px">Add Benefit</button>
            <br />
            @Html.LabelFor(model => model.Benefit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Benefit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Benefit, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.BenefitAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.BenefitAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BenefitAmount, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group ExpensesDivId">
            <button class="btn btn-default addExpenseBtn" style="width: 150px" title="Expense">Add Expense</button>
            <br />
            @Html.LabelFor(model => model.Expense, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Expense, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Expense, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.ExpenseAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.ExpenseAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExpenseAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@section MyScripts {
    <script type="text/javascript">
        $(document).ready(function () {
            var benefitWrapper = $(".BenefitsDivId");
            var addBenefitBtn = $(".addBenefitBtn");
            var expenseWrapper = $(".ExpensesDivId");
            var addExpensBtn = $(".addExpenseBtn");

            $(addBenefitBtn).click(function (e) {
                e.preventDefault();
                $(benefitWrapper).append('<div class="col-md-4 col-md-offset-2">' +
                   '@Html.EditorFor(model => model.Benefit, new { htmlAttributes = new { @class = "form-control" } })' +
                   '@Html.ValidationMessageFor(model => model.Benefit, "", new { @class = "text-danger" })' +
                   '</div>' +
                   '<div class="col-md-4 col-md-offset-2">' +
                   '@Html.EditorFor(model => model.BenefitAmount, new { htmlAttributes = new { @class = "form-control" } })' +
                   '@Html.ValidationMessageFor(model => model.BenefitAmount, "", new { @class = "text-danger" })' +
                   '</div>');
            });

            $(addExpensBtn).click(function (e) {
                e.preventDefault();
                $(expenseWrapper).append('<div class="col-md-4 col-md-offset-2">' +
                   '@Html.EditorFor(model => model.Expense, new { htmlAttributes = new { @class = "form-control" } })' +
                   '@Html.ValidationMessageFor(model => model.Expense, "", new { @class = "text-danger" })' +
                   '</div>' +
                   '<div class="col-md-4 col-md-offset-2">' +
                   '@Html.EditorFor(model => model.ExpenseAmount, new { htmlAttributes = new { @class = "form-control" } })' +
                   '@Html.ValidationMessageFor(model => model.ExpenseAmount, "", new { @class = "text-danger" })' +
                   '</div>');
            });
        });
    </script>
}
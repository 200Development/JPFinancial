@model JPFData.Models.Paycheck

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Paycheck</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Regular, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Regular, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Regular, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Employer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Employer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Employer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ElectronicsNontaxable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ElectronicsNontaxable, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ElectronicsNontaxable, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TravelBusinessExpenseNontaxable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TravelBusinessExpenseNontaxable, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TravelBusinessExpenseNontaxable, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HolidayPay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HolidayPay, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HolidayPay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GrossPay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GrossPay, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GrossPay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FederalTaxableGross, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FederalTaxableGross, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FederalTaxableGross, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FederalWithholding, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FederalWithholding, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FederalWithholding, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.YTDFederalWithholding, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.YTDFederalWithholding, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.YTDFederalWithholding, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FederalMedicaidWithholding, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FederalMedicaidWithholding, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FederalMedicaidWithholding, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.YTDFederalMedicaidWithholding, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.YTDFederalMedicaidWithholding, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.YTDFederalMedicaidWithholding, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SocialSecurityWithholding, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SocialSecurityWithholding, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SocialSecurityWithholding, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.YTDSocialSecurityWithholding, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.YTDSocialSecurityWithholding, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.YTDSocialSecurityWithholding, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StateTaxWithholding, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StateTaxWithholding, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StateTaxWithholding, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.YTDStateTaxWithholding, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.YTDStateTaxWithholding, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.YTDStateTaxWithholding, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CityTaxWithholding, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CityTaxWithholding, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CityTaxWithholding, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.YTDCityTaxWithholding, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.YTDCityTaxWithholding, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.YTDCityTaxWithholding, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IRA401KWithholding, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IRA401KWithholding, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IRA401KWithholding, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.YTDIRA401KWithholding, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.YTDIRA401KWithholding, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.YTDIRA401KWithholding, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DependentCareFSAWithholding, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DependentCareFSAWithholding, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DependentCareFSAWithholding, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.YTDDependentCareFSAWithholding, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.YTDDependentCareFSAWithholding, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.YTDDependentCareFSAWithholding, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HealthInsuranceWithholding, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HealthInsuranceWithholding, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HealthInsuranceWithholding, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.YTDHealthInsuranceWithholding, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.YTDHealthInsuranceWithholding, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.YTDHealthInsuranceWithholding, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DentalInsuranceWithholding, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DentalInsuranceWithholding, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DentalInsuranceWithholding, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.YTDDentalInsuranceWithholding, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.YTDDentalInsuranceWithholding, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.YTDDentalInsuranceWithholding, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalBeforeTaxDeductions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalBeforeTaxDeductions, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotalBeforeTaxDeductions, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.YTDTotalBeforeTaxDeductions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.YTDTotalBeforeTaxDeductions, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.YTDTotalBeforeTaxDeductions, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ChildSupportWithholding, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ChildSupportWithholding, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ChildSupportWithholding, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.YTDChildSupportWithholding, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.YTDChildSupportWithholding, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.YTDChildSupportWithholding, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalAfterTaxDeductions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalAfterTaxDeductions, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotalAfterTaxDeductions, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.YTDTotalAfterTaxDeductions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.YTDTotalAfterTaxDeductions, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.YTDTotalAfterTaxDeductions, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalDeductions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalDeductions, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotalDeductions, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.YTDTotalDeductions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.YTDTotalDeductions, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.YTDTotalDeductions, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NetPay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NetPay, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NetPay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
